{"version":3,"file":"static/js/290.5e93b15e.chunk.js","mappings":"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","sources":["views/tables/status/statusStagnant.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable prettier/prettier */\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  CTable,\r\n  CTableHeaderCell,\r\n  CTableHead,\r\n  CTableRow,\r\n  CTableBody,\r\n  CTableDataCell,\r\n} from '@coreui/react'\r\n\r\nfunction statusStagnant(props) {\r\n  const [info, setInfo] = useState()\r\n  const [stagnantCore, setStagnantCore] = useState([])\r\n  const [stagnantNetworking, setStagnantNetworking] = useState([])\r\n  const [stagnantERC, setStagnantERC] = useState([])\r\n  const [stagnantInterface, setStagnantInterface] = useState([])\r\n  const [stagnantMeta, setStagnantMeta] = useState([])\r\n  const [stagnantInformational, setStagnantInformational] = useState([])\r\n\r\n  useEffect(() => {\r\n    setInfo(JSON.parse(localStorage.getItem('count')))\r\n    setStagnantCore(JSON.parse(localStorage.getItem('statusStagnantCore')))\r\n    setStagnantNetworking(JSON.parse(localStorage.getItem('statusStagnantNetworking')))\r\n    setStagnantERC(JSON.parse(localStorage.getItem('statusStagnantERC')))\r\n    setStagnantInterface(JSON.parse(localStorage.getItem('statusStagnantInterface')))\r\n    setStagnantMeta(JSON.parse(localStorage.getItem('statusStagnantMeta')))\r\n    setStagnantInformational(JSON.parse(localStorage.getItem('statusStagnantInformational')))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (props.data !== undefined) {\r\n      setInfo(props.data)\r\n      setStagnantCore(props.data.filter(filterStagnantCore))\r\n      localStorage.setItem('count', JSON.stringify(props.data))\r\n      localStorage.setItem('statusStagnantCore', JSON.stringify(props.data.filter(filterStagnantCore)))\r\n      localStorage.setItem('statusStagnantNetworking', JSON.stringify(props.data.filter(filterStagnantNetworking)))\r\n      localStorage.setItem('statusStagnantERC', JSON.stringify(props.data.filter(filterStagnantERC)))\r\n      localStorage.setItem('statusStagnantInterface', JSON.stringify(props.data.filter(filterStagnantInterface)))\r\n      localStorage.setItem('statusStagnantMeta', JSON.stringify(props.data.filter(filterStagnantMeta)))\r\n      localStorage.setItem('statusStagnantInformational', JSON.stringify(props.data.filter(filterStagnantInformational)))\r\n    } else {\r\n      localStorage.setItem('count', JSON.stringify(info))\r\n      localStorage.setItem('statusStagnantCore', JSON.stringify(info.filter(filterStagnantCore)))\r\n      localStorage.setItem('statusStagnantNetworking', JSON.stringify(info.filter(filterStagnantNetworking)))\r\n      localStorage.setItem('statusStagnantERC', JSON.stringify(info.filter(filterStagnantERC)))\r\n      localStorage.setItem('statusStagnantInterface', JSON.stringify(info.filter(filterStagnantInterface)))\r\n      localStorage.setItem('statusStagnantMeta', JSON.stringify(info.filter(filterStagnantMeta)))\r\n      localStorage.setItem('statusStagnantInformational', JSON.stringify(info.filter(filterStagnantInformational)))\r\n    }\r\n  }, [info])\r\n\r\n  console.log(info)\r\n  console.log(stagnantCore)\r\n  console.log(stagnantInformational)\r\n\r\n  function filterStagnantCore(item, index) {\r\n    if (index >= 246 && item[1] === 'Stagnant' && item[5] === 'Core') {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  function filterStagnantNetworking(item, index) {\r\n    if (index >= 246 && item[1] === 'Stagnant' && item[5] === 'Networking') {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  function filterStagnantInterface(item, index) {\r\n    if (index >= 246 && item[1] === 'Stagnant' && item[5] === 'Interface') {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  function filterStagnantERC(item, index) {\r\n    if (index >= 246 && item[1] === 'Stagnant' && item[5] === 'ERC') {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  function filterStagnantMeta(item, index) {\r\n    if (index >= 246 && item[1] === 'Stagnant' && item[5] === 'Meta') {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  function filterStagnantInformational(item, index) {\r\n    if (index >= 246 && item[1] === 'Stagnant' && item[5] === 'Informational') {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {stagnantCore.length === 0 ? null : <><div\r\n              style={{\r\n                  fontSize: '40px',\r\n                  fontWeight: '800',\r\n                  marginBottom: '10px'\r\n              }}\r\n          >\r\n              Core\r\n          </div><CTable>\r\n                  <CTableHead color=\"dark\">\r\n                      <CTableRow>\r\n                          <CTableHeaderCell scope=\"col\">Number</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Author</CTableHeaderCell>\r\n                      </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                      {stagnantCore !== undefined ? (\r\n                          stagnantCore.map((item) => (\r\n                              <CTableRow>\r\n                                  <CTableHeaderCell scope=\"row\">\r\n                                      {item[2] !== null ? parseInt(item[2]) : 1}\r\n                                  </CTableHeaderCell>\r\n                                  <CTableDataCell>{item[3] != null ? item[3] : 1}</CTableDataCell>\r\n                                  <CTableDataCell>{item[4] !== null ? item[4] : 1}</CTableDataCell>\r\n                              </CTableRow>\r\n                          ))\r\n                      ) : (\r\n                          <CTableRow>\r\n                              <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n                              <CTableDataCell>Mark</CTableDataCell>\r\n                              <CTableDataCell>Otto</CTableDataCell>\r\n                          </CTableRow>\r\n                      )}\r\n                      {/* <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n      <CTableDataCell>Mark</CTableDataCell>\r\n      <CTableDataCell>Otto</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">2</CTableHeaderCell>\r\n      <CTableDataCell>Jacob</CTableDataCell>\r\n      <CTableDataCell>Thornton</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">3</CTableHeaderCell>\r\n      <CTableDataCell colSpan=\"2\">Larry the Bird</CTableDataCell>\r\n    </CTableRow> */}\r\n                  </CTableBody>\r\n              </CTable></>}\r\n      \r\n      {stagnantNetworking.length === 0 ? null : <><div\r\n              style={{\r\n                fontSize: '40px',\r\n                  fontWeight: '800',\r\n                  marginBottom: '10px'\r\n              }}\r\n          >\r\n              Networking\r\n          </div><CTable>\r\n                  <CTableHead color=\"dark\">\r\n                      <CTableRow>\r\n                          <CTableHeaderCell scope=\"col\">Number</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Author</CTableHeaderCell>\r\n                      </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                      {stagnantNetworking !== undefined ? (\r\n                          stagnantNetworking.map((item) => (\r\n                              <CTableRow>\r\n                                  <CTableHeaderCell scope=\"row\">\r\n                                      {item[2] !== null ? parseInt(item[2]) : 1}\r\n                                  </CTableHeaderCell>\r\n                                  <CTableDataCell>{item[3] != null ? item[3] : 1}</CTableDataCell>\r\n                                  <CTableDataCell>{item[4] !== null ? item[4] : 1}</CTableDataCell>\r\n                              </CTableRow>\r\n                          ))\r\n                      ) : (\r\n                          <CTableRow>\r\n                              <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n                              <CTableDataCell>Mark</CTableDataCell>\r\n                              <CTableDataCell>Otto</CTableDataCell>\r\n                          </CTableRow>\r\n                      )}\r\n                      {/* <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n      <CTableDataCell>Mark</CTableDataCell>\r\n      <CTableDataCell>Otto</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">2</CTableHeaderCell>\r\n      <CTableDataCell>Jacob</CTableDataCell>\r\n      <CTableDataCell>Thornton</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">3</CTableHeaderCell>\r\n      <CTableDataCell colSpan=\"2\">Larry the Bird</CTableDataCell>\r\n    </CTableRow> */}\r\n                  </CTableBody>\r\n              </CTable></>}\r\n      \r\n    {stagnantERC.length === 0 ? null : <><div\r\n              style={{\r\n                fontSize: '40px',\r\n                  fontWeight: '800',\r\n                  marginBottom: '10px'\r\n              }}\r\n          >\r\n              ERC\r\n          </div><CTable>\r\n                  <CTableHead color=\"dark\">\r\n                      <CTableRow>\r\n                          <CTableHeaderCell scope=\"col\">Number</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Author</CTableHeaderCell>\r\n                      </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                      {stagnantERC !== undefined ? (\r\n                          stagnantERC.map((item) => (\r\n                              <CTableRow>\r\n                                  <CTableHeaderCell scope=\"row\">\r\n                                      {item[2] !== null ? parseInt(item[2]) : 1}\r\n                                  </CTableHeaderCell>\r\n                                  <CTableDataCell>{item[3] != null ? item[3] : 1}</CTableDataCell>\r\n                                  <CTableDataCell>{item[4] !== null ? item[4] : 1}</CTableDataCell>\r\n                              </CTableRow>\r\n                          ))\r\n                      ) : (\r\n                          <CTableRow>\r\n                              <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n                              <CTableDataCell>Mark</CTableDataCell>\r\n                              <CTableDataCell>Otto</CTableDataCell>\r\n                          </CTableRow>\r\n                      )}\r\n                      {/* <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n      <CTableDataCell>Mark</CTableDataCell>\r\n      <CTableDataCell>Otto</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">2</CTableHeaderCell>\r\n      <CTableDataCell>Jacob</CTableDataCell>\r\n      <CTableDataCell>Thornton</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">3</CTableHeaderCell>\r\n      <CTableDataCell colSpan=\"2\">Larry the Bird</CTableDataCell>\r\n    </CTableRow> */}\r\n                  </CTableBody>\r\n              </CTable></>}\r\n      \r\n      {stagnantInterface.length === 0 ? null : <><div\r\n              style={{\r\n                fontSize: '40px',\r\n                  fontWeight: '800',\r\n                  marginBottom: '10px'\r\n              }}\r\n          >\r\n              Interface\r\n          </div><CTable>\r\n                  <CTableHead color=\"dark\">\r\n                      <CTableRow>\r\n                          <CTableHeaderCell scope=\"col\">Number</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Author</CTableHeaderCell>\r\n                      </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                      {stagnantInterface !== undefined ? (\r\n                          stagnantInterface.map((item) => (\r\n                              <CTableRow>\r\n                                  <CTableHeaderCell scope=\"row\">\r\n                                      {item[2] !== null ? parseInt(item[2]) : 1}\r\n                                  </CTableHeaderCell>\r\n                                  <CTableDataCell>{item[3] != null ? item[3] : 1}</CTableDataCell>\r\n                                  <CTableDataCell>{item[4] !== null ? item[4] : 1}</CTableDataCell>\r\n                              </CTableRow>\r\n                          ))\r\n                      ) : (\r\n                          <CTableRow>\r\n                              <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n                              <CTableDataCell>Mark</CTableDataCell>\r\n                              <CTableDataCell>Otto</CTableDataCell>\r\n                          </CTableRow>\r\n                      )}\r\n                      {/* <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n      <CTableDataCell>Mark</CTableDataCell>\r\n      <CTableDataCell>Otto</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">2</CTableHeaderCell>\r\n      <CTableDataCell>Jacob</CTableDataCell>\r\n      <CTableDataCell>Thornton</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">3</CTableHeaderCell>\r\n      <CTableDataCell colSpan=\"2\">Larry the Bird</CTableDataCell>\r\n    </CTableRow> */}\r\n                  </CTableBody>\r\n              </CTable></>}\r\n      \r\n      {stagnantMeta.length === 0 ? null : <><div\r\n              style={{\r\n                fontSize: '40px',\r\n                  fontWeight: '800',\r\n                  marginBottom: '10px'\r\n              }}\r\n          >\r\n              Meta\r\n          </div><CTable>\r\n                  <CTableHead color=\"dark\">\r\n                      <CTableRow>\r\n                          <CTableHeaderCell scope=\"col\">Number</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Author</CTableHeaderCell>\r\n                      </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                      {stagnantMeta !== undefined ? (\r\n                          stagnantMeta.map((item) => (\r\n                              <CTableRow>\r\n                                  <CTableHeaderCell scope=\"row\">\r\n                                      {item[2] !== null ? parseInt(item[2]) : 1}\r\n                                  </CTableHeaderCell>\r\n                                  <CTableDataCell>{item[3] != null ? item[3] : 1}</CTableDataCell>\r\n                                  <CTableDataCell>{item[4] !== null ? item[4] : 1}</CTableDataCell>\r\n                              </CTableRow>\r\n                          ))\r\n                      ) : (\r\n                          <CTableRow>\r\n                              <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n                              <CTableDataCell>Mark</CTableDataCell>\r\n                              <CTableDataCell>Otto</CTableDataCell>\r\n                          </CTableRow>\r\n                      )}\r\n                      {/* <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n      <CTableDataCell>Mark</CTableDataCell>\r\n      <CTableDataCell>Otto</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">2</CTableHeaderCell>\r\n      <CTableDataCell>Jacob</CTableDataCell>\r\n      <CTableDataCell>Thornton</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">3</CTableHeaderCell>\r\n      <CTableDataCell colSpan=\"2\">Larry the Bird</CTableDataCell>\r\n    </CTableRow> */}\r\n                  </CTableBody>\r\n              </CTable></>}\r\n      \r\n      {stagnantInformational.length === 0 ? null : <><div\r\n              style={{\r\n                fontSize: '40px',\r\n                  fontWeight: '800',\r\n                  marginBottom: '10px'\r\n              }}\r\n          >\r\n              Informational\r\n          </div><CTable>\r\n                  <CTableHead color=\"dark\">\r\n                      <CTableRow>\r\n                          <CTableHeaderCell scope=\"col\">Number</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\r\n                          <CTableHeaderCell scope=\"col\">Author</CTableHeaderCell>\r\n                      </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                      {stagnantInformational !== undefined ? (\r\n                          stagnantInformational.map((item) => (\r\n                              <CTableRow>\r\n                                  <CTableHeaderCell scope=\"row\">\r\n                                      {item[2] !== null ? parseInt(item[2]) : 1}\r\n                                  </CTableHeaderCell>\r\n                                  <CTableDataCell>{item[3] != null ? item[3] : 1}</CTableDataCell>\r\n                                  <CTableDataCell>{item[4] !== null ? item[4] : 1}</CTableDataCell>\r\n                              </CTableRow>\r\n                          ))\r\n                      ) : (\r\n                          <CTableRow>\r\n                              <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n                              <CTableDataCell>Mark</CTableDataCell>\r\n                              <CTableDataCell>Otto</CTableDataCell>\r\n                          </CTableRow>\r\n                      )}\r\n                      {/* <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\r\n      <CTableDataCell>Mark</CTableDataCell>\r\n      <CTableDataCell>Otto</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">2</CTableHeaderCell>\r\n      <CTableDataCell>Jacob</CTableDataCell>\r\n      <CTableDataCell>Thornton</CTableDataCell>\r\n    </CTableRow>\r\n    <CTableRow>\r\n      <CTableHeaderCell scope=\"row\">3</CTableHeaderCell>\r\n      <CTableDataCell colSpan=\"2\">Larry the Bird</CTableDataCell>\r\n    </CTableRow> */}\r\n                  </CTableBody>\r\n              </CTable></>}\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default statusStagnant\r\n"],"names":["props","useState","info","setInfo","stagnantCore","setStagnantCore","stagnantNetworking","setStagnantNetworking","stagnantERC","setStagnantERC","stagnantInterface","setStagnantInterface","stagnantMeta","setStagnantMeta","stagnantInformational","setStagnantInformational","filterStagnantCore","item","index","filterStagnantNetworking","filterStagnantInterface","filterStagnantERC","filterStagnantMeta","filterStagnantInformational","useEffect","JSON","parse","localStorage","getItem","undefined","data","filter","setItem","stringify","console","log","length","style","fontSize","fontWeight","marginBottom","color","scope","map","parseInt"],"sourceRoot":""}