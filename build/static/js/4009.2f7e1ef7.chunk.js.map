{"version":3,"file":"static/js/4009.2f7e1ef7.chunk.js","mappings":"oSAyHA,UAhGiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAcG,GAAd,WACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,KAAXD,OAER,GAA0BR,EAAAA,EAAAA,UAAS,GAAnC,eAAOU,EAAP,KAAcC,EAAd,KACMC,GAAUC,EAAAA,EAAAA,UACVC,EAAe,SAACC,EAAKC,GAAN,OACnB,SAAC,KAAD,CACEC,UAAU,EACVC,SAAS,EACTC,UAAU,gCACVC,MAAO,CAAEC,gBAAiBL,GAJ5B,UAME,iBAAKG,UAAU,SAAf,WACE,SAAC,KAAD,UAAaJ,KACb,SAAC,KAAD,CAAaI,UAAU,cAAcG,OAAK,UAK1CC,EAAY,yCAAG,WAAOC,GAAP,6EACnBA,EAAEC,iBACFtB,EAAS,IAFU,SAIjBQ,EAASG,EAAa,yCAA0C,YAJ/C,SAKXN,EAAOP,EAAOG,GALH,OAMjBE,EAAS,KANQ,gDAQjBH,EAAS,KAAIuB,SACbf,EAASG,EAAa,KAAIY,QAAS,YACnCC,QAAQC,IAAI,KAAIF,SAVC,yDAAH,sDAclB,OACE,iBAAKP,UAAU,yDAAf,WACE,SAAC,KAAD,CAAUU,IAAKjB,EAASkB,KAAMpB,EAAOqB,UAAU,aAC/C,SAAC,KAAD,WACE,SAAC,KAAD,CAAMZ,UAAU,yBAAhB,UACE,SAAC,KAAD,CAAMa,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAxB,UACE,SAAC,KAAD,CAAOf,UAAU,OAAjB,UACE,SAAC,KAAD,CAAWA,UAAU,MAArB,UACE,UAAC,KAAD,CAAOgB,SAAUZ,EAAjB,WACE,sCACA,cAAGJ,UAAU,uBAAb,kCAEA,UAAC,KAAD,CAAaA,UAAU,OAAvB,WACE,SAAC,KAAD,iBACA,SAAC,KAAD,CACEiB,YAAY,QACZC,aAAa,QACbC,SAAU,SAACd,GAAD,OAAOtB,EAASsB,EAAEe,OAAOC,QACnCC,UAAQ,QAGZ,UAAC,KAAD,CAAatB,UAAU,OAAvB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAOuB,KAAMC,EAAAA,OAEf,SAAC,KAAD,CACEC,KAAK,WACLR,YAAY,WACZC,aAAa,eACbC,SAAU,SAACd,GAAD,OAAOnB,EAAYmB,EAAEe,OAAOC,QACtCC,UAAQ,QAGZ,UAAC,KAAD,CAAatB,UAAU,OAAvB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAOuB,KAAMC,EAAAA,OAEf,SAAC,KAAD,CACEC,KAAK,WACLR,YAAY,kBACZC,aAAa,eACbI,UAAQ,QAGZ,gBAAKtB,UAAU,SAAf,UACE,SAAC,KAAD,CAASyB,KAAK,SAASxB,MAAO,CAAEC,gBAAiB,WAAjD","sources":["views/pages/register/Register.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CToast,\n  CToastBody,\n  CToaster,\n  CToastHeader,\n  CToastClose,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { useState } from 'react'\nimport { useUserAuth } from 'src/Context/AuthContext'\nimport { useNavigate } from 'react-router-dom'\n\nconst Register = () => {\n  const [email, setEmail] = useState('')\n  const [error, setError] = useState('')\n  const [password, setPassword] = useState('')\n  const navigate = useNavigate()\n  const { signUp } = useUserAuth()\n\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  const exampleToast = (txt, color) => (\n    <CToast\n      autohide={false}\n      visible={true}\n      className=\"text-white align-items-center\"\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"d-flex\">\n        <CToastBody>{txt}</CToastBody>\n        <CToastClose className=\"me-2 m-auto\" white />\n      </div>\n    </CToast>\n  )\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setError('')\n    try {\n      addToast(exampleToast(`Account has been created Successfully.`, '#12b886'))\n      await signUp(email, password)\n      navigate('/')\n    } catch (err) {\n      setError(err.message)\n      addToast(exampleToast(err.message, '#fa5252'))\n      console.log(err.message)\n    }\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm onSubmit={handleSubmit}>\n                  <h1>Register</h1>\n                  <p className=\"text-medium-emphasis\">Create your account</p>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                      required\n                    />\n                  </CInputGroup>\n                  <div className=\"d-grid\">\n                    <CButton type=\"submit\" style={{ backgroundColor: '#0c2461' }}>\n                      Create Account\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n"],"names":["useState","email","setEmail","setError","password","setPassword","navigate","useNavigate","signUp","useUserAuth","toast","addToast","toaster","useRef","exampleToast","txt","color","autohide","visible","className","style","backgroundColor","white","handleSubmit","e","preventDefault","message","console","log","ref","push","placement","md","lg","xl","onSubmit","placeholder","autoComplete","onChange","target","value","required","icon","cilLockLocked","type"],"sourceRoot":""}